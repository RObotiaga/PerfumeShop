# app/keyboards.py
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.database import requests as rq # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
from app.database.cache import cart_cache
import logging

from app import config as app_config

logger = logging.getLogger(__name__)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–æ–≥–ª–∞—Å–∏—è —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π
privacy_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üìú –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", url=app_config.PRIVACY_URL)],
        [InlineKeyboardButton(text="‚úÖ –°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è", callback_data="privacy_accept")]
    ]
)

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')],
    [InlineKeyboardButton(text='üõí –ö–æ—Ä–∑–∏–Ω–∞', callback_data='cart')],
    [InlineKeyboardButton(text='–ö–æ–Ω—Ç–∞–∫—Ç—ã', callback_data='contacts')]
])

async def categories_keyboard_builder(): # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏, —á—Ç–æ —ç—Ç–æ builder
    all_categories_data = await rq.get_categories() # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç List[Dict[str, Any]]
    builder = InlineKeyboardBuilder()
    if all_categories_data:
        for category_data in all_categories_data:
            # category_data —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å, –Ω–∞–ø—Ä–∏–º–µ—Ä: {"id": "–ù–æ—É—Ç–±—É–∫–∏", "name": "–ù–æ—É—Ç–±—É–∫–∏"}
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º category_data['id'] (–∫–æ—Ç–æ—Ä–æ–µ —Ä–∞–≤–Ω–æ –∏–º–µ–Ω–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏) –¥–ª—è callback_data
            builder.row(InlineKeyboardButton(text=category_data['name'], callback_data=f"category_{category_data['id']}"))
    builder.row(InlineKeyboardButton(text='–ù–∞ –≥–ª–∞–≤–Ω—É—é', callback_data='start'))
    return builder.as_markup()

async def get_items_by_category_kb(category_name: str): # –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    all_items_data = await rq.get_items_by_category(category_name) # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç List[Dict[str, Any]]
    builder = InlineKeyboardBuilder()
    if all_items_data:
        for item_data in all_items_data:
            # item_data —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å, –Ω–∞–ø—Ä–∏–º–µ—Ä: {"id": "NB001", "name": "–£–ª—å—Ç—Ä–∞–±—É–∫", ...}
            builder.row(InlineKeyboardButton(text=item_data['name'], callback_data=f"item_{item_data['id']}"))
    builder.row(InlineKeyboardButton(text='–ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data='catalog'))
    return builder.as_markup()

async def back_to_category_kb(category_name: str, page: int = 1): # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä page
    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ category_name –Ω–µ –ø—É—Å—Ç–æ–µ, —á—Ç–æ–±—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π callback_data
    if not category_name:
        # –ï—Å–ª–∏ –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –ø—É—Å—Ç–æ–µ, –ø—Ä–µ–¥–ª–æ–∂–∏–º –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ–±—â–∏–π –∫–∞—Ç–∞–ª–æ–≥
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='–í –∫–∞—Ç–∞–ª–æ–≥', callback_data='catalog')]
        ])
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', callback_data=f'category:{category_name}:page:{page}')]
    ])

def get_items_keyboard(items: list, category_name: str, page: int = 1, items_per_page: int = 10) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
    
    Args:
        items: –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
        category_name: –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 1)
        items_per_page: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    """
    builder = InlineKeyboardBuilder()
    
    # –í—ã—á–∏—Å–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = (page - 1) * items_per_page
    end_idx = start_idx + items_per_page
    current_page_items = items[start_idx:end_idx]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Å—Ç–æ–ª–±–∏–∫
    for item in current_page_items:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å —É—á–µ—Ç–æ–º —Å—Ç–∞—Ç—É—Å–∞ –∏ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è
        status_emoji = "üîí" if item['status'] == app_config.ITEM_STATUS_RESERVED else "‚úÖ"
        quantity_text = f" ({item['quantity']} {item['unit']})" if item['quantity'] > 0 else ""
        button_text = f"{status_emoji} {item['name']} - {item['price']}‚ÇΩ{quantity_text}"
        
        builder.row(InlineKeyboardButton(
            text=button_text,
            callback_data=f"item:{item['id']}"
        ))
    
    # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    total_pages = (len(items) + items_per_page - 1) // items_per_page
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    pagination_row = []
    
    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
    if page > 1:
        pagination_row.append(
            InlineKeyboardButton(
                text="‚óÄÔ∏è",
                callback_data=f"category:{category_name}:page:{page-1}"
            )
        )
    
    # –ö–Ω–æ–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    pagination_row.append(
        InlineKeyboardButton(
            text=f"{page}/{total_pages}",
            callback_data="ignore"  # –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å
        )
    )
    
    # –ö–Ω–æ–ø–∫–∞ "–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
    if page < total_pages:
        pagination_row.append(
            InlineKeyboardButton(
                text="‚ñ∂Ô∏è",
                callback_data=f"category:{category_name}:page:{page+1}"
            )
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥
    builder.row(*pagination_row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥" –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥
    builder.row(InlineKeyboardButton(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥",
        callback_data="catalog"
    ))
    
    return builder.as_markup()

def get_catalog_keyboard(categories: list) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤."""
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ —Å—Ç–æ–ª–±–∏–∫
    for category in categories:
        builder.row(InlineKeyboardButton(
            text=category['name'],
            callback_data=f"category:{category['name']}:page:1"
        ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥
    builder.row(InlineKeyboardButton(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="start"
    ))
    
    return builder.as_markup()

def get_cart_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(
        text="üõí –ö–æ—Ä–∑–∏–Ω–∞",
        callback_data="cart"
    ))
    return builder.as_markup()

def get_item_cart_keyboard(item_id: str, user_id: int, item_data: dict) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–º –≤ –∫–æ—Ä–∑–∏–Ω–µ."""
    builder = InlineKeyboardBuilder()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    current_quantity = cart_cache.get_item_quantity(user_id, item_id)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è
    if item_data['unit'] == app_config.ITEM_UNIT_PCS:
        # –î–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ —à—Ç—É–∫–∞—Ö
        if current_quantity > 0:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ
            builder.row(
                InlineKeyboardButton(text="-10", callback_data=f"cart:decrease:{item_id}:10"),
                InlineKeyboardButton(text="-1", callback_data=f"cart:decrease:{item_id}:1"),
                InlineKeyboardButton(text=f"{current_quantity} —à—Ç", callback_data="ignore"),
                InlineKeyboardButton(text="+1", callback_data=f"cart:increase:{item_id}:1"),
                InlineKeyboardButton(text="+10", callback_data=f"cart:increase:{item_id}:10")
            )
        else:
            # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            builder.row(
                InlineKeyboardButton(text="0 —à—Ç", callback_data="ignore"),
                InlineKeyboardButton(text="+1", callback_data=f"cart:increase:{item_id}:1"),
                InlineKeyboardButton(text="+10", callback_data=f"cart:increase:{item_id}:10")
            )
    else:
        # –î–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∏–ª–ª–∏–ª–∏—Ç—Ä–∞—Ö
        if current_quantity > 0:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–±—Ä–æ—Å–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω–µ
            builder.row(InlineKeyboardButton(text="–°–±—Ä–æ—Å–∏—Ç—å", callback_data=f"cart:reset:{item_id}"))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å —à–∞–≥–∞–º–∏ –∑–∞–∫–∞–∑–∞
        order_steps = item_data.get('order_steps', [1, 2, 3, 5, 10, 15, 20])
        buttons = []
        for step in order_steps:
            buttons.append(InlineKeyboardButton(
                text=f"+{step}",
                callback_data=f"cart:increase:{item_id}:{step}"
            ))
        builder.row(*buttons)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∫–æ—Ä–∑–∏–Ω—ã
    builder.row(InlineKeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞", callback_data="cart"))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    builder.row(InlineKeyboardButton(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
        callback_data=f"category:{item_data['category_name']}:page:1"
    ))
    
    return builder.as_markup()

def get_cart_items_keyboard(cart_items: list) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ."""
    builder = InlineKeyboardBuilder()
    
    for item in cart_items:
        builder.row(InlineKeyboardButton(
            text=f"‚ùå {item['name']} - {item['quantity']} {item['unit']}",
            callback_data=f"cart:remove:{item['id']}"
        ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω–æ–π
    builder.row(
        InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="cart:clear"),
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="start")
    )
    
    return builder.as_markup()